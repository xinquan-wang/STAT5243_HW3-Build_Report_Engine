as.numeric(z)
rbind(names(z), as.numeric(z))
percentage.table <- function(x, digits = 1){
tab <- table(x)
percentage.tab <- 100*tab/(sum(tab))
rounded.tab <- round(x = percentage.tab, digits = digits)
name <- eval(rounded.tab)
num <- paste(rounded.tab, "%", sep = "")
return(rbind(name, num))
}
round.numerics <- function(x, digits){
if(is.numeric(x)){
x <- round(x = x, digits = digits)
}
return(x)
}
mean.diff <- function(x, y){
return(mean(x, na.rm=TRUE) - mean(y, na.rm=TRUE))
}
percentage.table(unique.dat$Gender, 1)
z <- percentage.table(unique.dat$Gender, 1)
names(z)
as.numeric(z)
rbind(names(z), as.numeric(z))
percentage.table(unique.dat$Gender, 1)
percentage.table <- function(x, digits = 1){
tab <- table(x)
percentage.tab <- 100*tab/(sum(tab))
rounded.tab <- round(x = percentage.tab, digits = digits)
eval(rounded.tab)
num <- paste(rounded.tab, "%", sep = "")
return(num)
}
round.numerics <- function(x, digits){
if(is.numeric(x)){
x <- round(x = x, digits = digits)
}
return(x)
}
mean.diff <- function(x, y){
return(mean(x, na.rm=TRUE) - mean(y, na.rm=TRUE))
}
percentage.table(unique.dat$Gender, 1)
percentage.table <- function(x, digits = 1){
tab <- table(x)
percentage.tab <- 100*tab/(sum(tab))
rounded.tab <- round(x = percentage.tab, digits = digits)
name <- eval(rounded.tab)
num <- paste(rounded.tab, "%", sep = "")
return(name, num)
}
round.numerics <- function(x, digits){
if(is.numeric(x)){
x <- round(x = x, digits = digits)
}
return(x)
}
mean.diff <- function(x, y){
return(mean(x, na.rm=TRUE) - mean(y, na.rm=TRUE))
}
percentage.table(unique.dat$Gender, 1)
percentage.table <- function(x, digits = 1){
tab <- table(x)
percentage.tab <- 100*tab/(sum(tab))
rounded.tab <- round(x = percentage.tab, digits = digits)
name <- eval(rounded.tab)
num <- paste(rounded.tab, "%", sep = "")
return(rbind(name, num))
}
round.numerics <- function(x, digits){
if(is.numeric(x)){
x <- round(x = x, digits = digits)
}
return(x)
}
mean.diff <- function(x, y){
return(mean(x, na.rm=TRUE) - mean(y, na.rm=TRUE))
}
percentage.table(unique.dat$Gender, 1)
percentage.table <- function(x, digits = 1){
tab <- table(x)
percentage.tab <- 100*tab/(sum(tab))
rounded.tab <- round(x = percentage.tab, digits = digits)
num <- paste(rounded.tab, "%", sep = "")
return(rbind(eval(rounded.tab), num))
}
round.numerics <- function(x, digits){
if(is.numeric(x)){
x <- round(x = x, digits = digits)
}
return(x)
}
mean.diff <- function(x, y){
return(mean(x, na.rm=TRUE) - mean(y, na.rm=TRUE))
}
percentage.table(unique.dat$Gender, 1)
percentage.table <- function(x, digits = 1){
tab <- table(x)
percentage.tab <- 100*tab/(sum(tab))
rounded.tab <- round(x = percentage.tab, digits = digits)
num <- paste(rounded.tab, "%", sep = "")
return(rbind(eval(names(rounded.tab)), num))
}
round.numerics <- function(x, digits){
if(is.numeric(x)){
x <- round(x = x, digits = digits)
}
return(x)
}
mean.diff <- function(x, y){
return(mean(x, na.rm=TRUE) - mean(y, na.rm=TRUE))
}
percentage.table(unique.dat$Gender, 1)
percentage.table(unique.dat$Gender, 1) %>% as.data.frame()
library(flexdashboard)
library(shiny)
library(rmarkdown)
library(knitr)
library(Hmisc)
library(DT)
library(purrr)
library(data.table)
assignInNamespace("cedta.override", c(data.table:::cedta.override,"rmarkdown"), "data.table")
opts_chunk$set(echo = FALSE, comment="", warning = FALSE, message = FALSE, tidy.opts=list(width.cutoff=55), tidy = TRUE)
percentage.table <- function(x, digits = 1){
tab <- table(x)
percentage.tab <- 100*tab/(sum(tab))
rounded.tab <- round(x = percentage.tab, digits = digits)
out <- rbind(names(rounded.tab), paste(rounded.tab, "%", sep = "")) %>% as.data.frame()
return(out)
}
round.numerics <- function(x, digits){
if(is.numeric(x)){
x <- round(x = x, digits = digits)
}
return(x)
}
mean.diff <- function(x, y){
return(mean(x, na.rm=TRUE) - mean(y, na.rm=TRUE))
}
percentage.table(unique.dat$Gender, 1)
unique.dat <- dat[unique(get(id.name)), ]
percentage.table(unique.dat$`Age Group`, 1)
percentage.table <- function(x, digits = 1){
tab <- table(x)
percentage.tab <- 100*tab/(sum(tab))
rounded.tab <- round(x = percentage.tab, digits = digits)
out <- rbind(names(rounded.tab), paste(rounded.tab, "%", sep = "")) %>% as.data.frame(header = T)
return(out)
}
round.numerics <- function(x, digits){
if(is.numeric(x)){
x <- round(x = x, digits = digits)
}
return(x)
}
mean.diff <- function(x, y){
return(mean(x, na.rm=TRUE) - mean(y, na.rm=TRUE))
}
unique.dat <- dat[unique(get(id.name)), ]
percentage.table(unique.dat$`Age Group`, 1)
percentage.table <- function(x, digits = 1){
tab <- table(x)
percentage.tab <- 100*tab/(sum(tab))
rounded.tab <- round(x = percentage.tab, digits = digits)
out <- rbind(names(rounded.tab), paste(rounded.tab, "%", sep = "")) %>% as.data.frame(header = F)
return(out)
}
round.numerics <- function(x, digits){
if(is.numeric(x)){
x <- round(x = x, digits = digits)
}
return(x)
}
mean.diff <- function(x, y){
return(mean(x, na.rm=TRUE) - mean(y, na.rm=TRUE))
}
unique.dat <- dat[unique(get(id.name)), ]
percentage.table(unique.dat$`Age Group`, 1)
percentage.table(unique.dat$`Income Group`, 1)
percentage.table <- function(x, digits = 1){
tab <- table(x)
percentage.tab <- 100*tab/(sum(tab))
rounded.tab <- round(x = percentage.tab, digits = digits)
out <- write.table(rbind(names(rounded.tab), paste(rounded.tab, "%", sep = "")),
row.names = FALSE, col.names = FALSE)
%>% as.data.frame(header = F)
percentage.table <- function(x, digits = 1){
tab <- table(x)
percentage.tab <- 100*tab/(sum(tab))
rounded.tab <- round(x = percentage.tab, digits = digits)
out <- write.table(rbind(names(rounded.tab), paste(rounded.tab, "%", sep = "")),
row.names = FALSE, col.names = FALSE)
return(out)
}
round.numerics <- function(x, digits){
if(is.numeric(x)){
x <- round(x = x, digits = digits)
}
return(x)
}
mean.diff <- function(x, y){
return(mean(x, na.rm=TRUE) - mean(y, na.rm=TRUE))
}
percentage.table(unique.dat$`Income Group`, 1)
percentage.table <- function(x, digits = 1){
tab <- table(x)
percentage.tab <- 100*tab/(sum(tab))
rounded.tab <- round(x = percentage.tab, digits = digits)
out <- write.table(rbind(names(rounded.tab), paste(rounded.tab, "%", sep = "")),
row.names = FALSE, col.names = FALSE) %>% as.data.frame()
return(out)
}
round.numerics <- function(x, digits){
if(is.numeric(x)){
x <- round(x = x, digits = digits)
}
return(x)
}
mean.diff <- function(x, y){
return(mean(x, na.rm=TRUE) - mean(y, na.rm=TRUE))
}
percentage.table(unique.dat$`Income Group`, 1)
percentage.table(unique.dat$Gender, 1)
percentage.table <- function(x, digits = 1){
tab <- table(x)
percentage.tab <- 100*tab/(sum(tab))
rounded.tab <- round(x = percentage.tab, digits = digits)
out <- write.table(rbind(names(rounded.tab), paste(rounded.tab, "%", sep = "")),
row.names = FALSE, col.names = FALSE) %>% as.data.frame(.)
return(out)
}
round.numerics <- function(x, digits){
if(is.numeric(x)){
x <- round(x = x, digits = digits)
}
return(x)
}
mean.diff <- function(x, y){
return(mean(x, na.rm=TRUE) - mean(y, na.rm=TRUE))
}
percentage.table(unique.dat$Gender, 1)
percentage.table <- function(x, digits = 1){
tab <- table(x)
percentage.tab <- 100*tab/(sum(tab))
rounded.tab <- round(x = percentage.tab, digits = digits)
out <- write.table(rbind(names(rounded.tab), paste(rounded.tab, "%", sep = "")),
row.names = FALSE, col.names = FALSE)
return(data.frame(out))
}
round.numerics <- function(x, digits){
if(is.numeric(x)){
x <- round(x = x, digits = digits)
}
return(x)
}
mean.diff <- function(x, y){
return(mean(x, na.rm=TRUE) - mean(y, na.rm=TRUE))
}
percentage.table(unique.dat$Gender, 1)
percentage.table <- function(x, digits = 1){
tab <- table(x)
percentage.tab <- 100*tab/(sum(tab))
rounded.tab <- round(x = percentage.tab, digits = digits)
out <-paste(rounded.tab, "%", sep = "") %>% as.data.frame()
colnames(out) <- names(rounded.tab)
return(out)
}
round.numerics <- function(x, digits){
if(is.numeric(x)){
x <- round(x = x, digits = digits)
}
return(x)
}
mean.diff <- function(x, y){
return(mean(x, na.rm=TRUE) - mean(y, na.rm=TRUE))
}
percentage.table(unique.dat$Gender, 1)
percentage.table <- function(x, digits = 1){
tab <- table(x)
percentage.tab <- 100*tab/(sum(tab))
rounded.tab <- round(x = percentage.tab, digits = digits)
out <- paste(rounded.tab, "%", sep = "")
colnames(out) <- names(rounded.tab)
return(out)
}
round.numerics <- function(x, digits){
if(is.numeric(x)){
x <- round(x = x, digits = digits)
}
return(x)
}
mean.diff <- function(x, y){
return(mean(x, na.rm=TRUE) - mean(y, na.rm=TRUE))
}
percentage.table(unique.dat$Gender, 1)
percentage.table <- function(x, digits = 1){
tab <- table(x)
percentage.tab <- 100*tab/(sum(tab))
rounded.tab <- round(x = percentage.tab, digits = digits)
out <- paste(rounded.tab, "%", sep = "") %>% as.data.frame()
colnames(out) <- names(rounded.tab)
return(out)
}
round.numerics <- function(x, digits){
if(is.numeric(x)){
x <- round(x = x, digits = digits)
}
return(x)
}
mean.diff <- function(x, y){
return(mean(x, na.rm=TRUE) - mean(y, na.rm=TRUE))
}
percentage.table(unique.dat$Gender, 1)
z <- table(unique.dat$Gender)
paste(z, "%", sep = "") %>% as.data.frame()
colnames(out) <- names(rounded.tab)
colnames(out) <- names(z)
colnames(z) <- names(z)
m <- paste(z, "%", sep = "") %>% as.data.frame()
colnames(m) <- names(z)
names(z)
paste(z, "%", sep = "") %>% as.data.frame()
paste(z, "%", sep = "") %>% as.data.frame(., col.names = names(z))
paste(z, "%", sep = "") %>% as.data.frame(., col.names = names(z))
names(z)
paste(z, "%", sep = "") %>% as.data.frame(., col.names = names(z))
paste(z, "%", sep = "")
paste(z, "%", sep = "") %>% as.data.frame()
paste(z, "%", sep = "") %>% as.data.frame(t(z))
paste(z, "%", sep = "") %>% as.data.frame(t(t(z)))
paste(z, "%", sep = "") %>% as.data.frame(matrix(z))
paste(z, "%", sep = "") %>% as.data.frame(matrix(z, ncol = 2))
matrix(z, ncol = 2)
as.data.frame(matrix(z, ncol = 2))
as.data.frame(matrix(z, ncol = 2)) %>% paste(., "%", sep = "")
as.data.frame(matrix(z, ncol = 2)) %>% paste(., "%", sep = "") %>% as.data.frame()
paste(z, "%", sep = "")
paste(z, "%", sep = "") %>% as.data.frame() %>% t(.)
percentage.table(unique.dat$Gender, 1)
paste(z, "%", sep = "") %>% as.data.frame(row.names = NULL) %>% t(.)
paste(z, "%", sep = "") %>% as.data.frame(row.names = F) %>% t(.)
paste(z, "%", sep = "") %>% as.data.frame(row.names = F) %>% t(.)
paste(z, "%", sep = "") %>% as.data.frame() %>% t()
m <- paste(z, "%", sep = "") %>% as.data.frame() %>% t()
colnames(m) <- names(z)
m
m <- paste(z, "%", sep = "")%>% t() %>% as.data.frame()
colnames(m) <- names(z)
m
percentage.table <- function(x, digits = 1){
tab <- table(x)
percentage.tab <- 100*tab/(sum(tab))
rounded.tab <- round(x = percentage.tab, digits = digits)
out <- paste(rounded.tab, "%", sep = "") %>% t() %>% as.data.frame()
colnames(out) <- names(rounded.tab)
return(out)
}
round.numerics <- function(x, digits){
if(is.numeric(x)){
x <- round(x = x, digits = digits)
}
return(x)
}
mean.diff <- function(x, y){
return(mean(x, na.rm=TRUE) - mean(y, na.rm=TRUE))
}
percentage.table(unique.dat$Gender, 1)
unique.dat <- dat[unique(get(id.name)), ]
percentage.table(unique.dat$`Age Group`, 1)
percentage.table(unique.dat$`Income Group`, 1)
percentage.table(unique.dat$Region, 1)
percentage.table(unique.dat$Persona, 1)
is.na(unique.dat$Age)
sum(is.na(unique.dat$Age))
sum(unique.dat$Age < 18)
inputPanel(
inputId = "respondent variables",
label = "Select variable:",
choices = respondent.variables,
selected = respondent.variables[1]
)
renderPlot({
tab <- percentage.table(x = dat[get(product.name) == get(product.name)[1], get(input$respondent_variable)])
barplot(height = tab, space= 0.01, las = 1, main = input$respondent_variable, ylab = "Percentage",
xlab = input$respondent_variable,ylim = c(0, 1.2*max(tab, na.rm = TRUE)),
col = "dodgerblue")
if(input$respondent_show_percentages == TRUE){
space_val = 0
text(x = -0.4 + 1:length(tab) *(1+space_val), y = tab, labels = sprintf("%.1f%%", tab), pos = 3)
}
})
dat <- fread(input = "../Data/Homework 3 Data.csv", verbose = FALSE)
dat
library(knitr)
opts_chunk$set(echo = TRUE, eval = TRUE, comment="", warning = FALSE, message = FALSE, tidy.opts=list(width.cutoff=55), tidy = TRUE)
library(data.table)
dat <- fread(input = "../Data/Homework 3 Data.csv", verbose = FALSE)
num.lines <- 20
question.counter = 0
library(DT)
sampled.rows <- sample(x = 1:dat[, .N], size = num.lines, replace = FALSE)
datatable(data = dat[sampled.rows,], rownames = FALSE)
inputPanel(
inputId = "respondent variables",
label = "Select variable:",
choices = respondent.variables,
selected = respondent.variables[1]
)
renderPlot({
tab <- percentage.table(x = dat[get(product.name) == get(product.name)[1], get(input$respondent_variable)])
barplot(height = tab, space= 0.01, las = 1, main = input$respondent_variable, ylab = "Percentage",
xlab = input$respondent_variable,ylim = c(0, 1.2*max(tab, na.rm = TRUE)),
col = "dodgerblue")
if(input$respondent_show_percentages == TRUE){
space_val = 0
text(x = -0.4 + 1:length(tab) *(1+space_val), y = tab, labels = sprintf("%.1f%%", tab), pos = 3)
}
})
inputPanel(
selectInput(inputId = "respondent variables",
label = "Select variable:",
choices = respondent.variables,
selected = respondent.variables[1])
)
renderPlot({
tab <- percentage.table(x = dat[get(product.name) == get(product.name)[1], get(input$respondent_variable)])
barplot(height = tab, space= 0.01, las = 1, main = input$respondent_variable, ylab = "Percentage",
xlab = input$respondent_variable,ylim = c(0, 1.2*max(tab, na.rm = TRUE)),
col = "dodgerblue")
if(input$respondent_show_percentages == TRUE){
space_val = 0
text(x = -0.4 + 1:length(tab) *(1+space_val), y = tab, labels = sprintf("%.1f%%", tab), pos = 3)
}
})
# Chunk 1: setup
library(flexdashboard)
library(shiny)
library(rmarkdown)
library(knitr)
library(Hmisc)
library(DT)
library(purrr)
library(data.table)
assignInNamespace("cedta.override", c(data.table:::cedta.override,"rmarkdown"), "data.table")
opts_chunk$set(echo = FALSE, comment="", warning = FALSE, message = FALSE, tidy.opts=list(width.cutoff=55),
tidy = TRUE)
dat <- fread(input = "../Data/Homework 3 Data.csv", verbose = FALSE)
id.name <- "id"
age.name <- "Age"
gender.name <- "Gender"
income.name <- "Income"
region.name <- "Region"
persona.name <- "Persona"
product.name <- "Product"
awareness.name <- "Awareness"
consideration.name <- "Consideration"
consumption.name <- "Consumption"
satisfaction.name <- "Satisfaction"
advocacy.name <- "Advocacy"
pattern.bp <- "BP_"
age.group.name <- "Age Group"
income.group.name <- "Income Group"
cuts.age <- c(18, 35, 50, 65, 120)
cuts.income <- 1000* c(0, 50, 75, 100, 150, 250)
dat[, eval(age.group.name) := cut2(x = get(age.name), cuts = cuts.age)]
dat[, eval(income.group.name) := cut2(x = get(income.name), cuts = cuts.income)]
dat[, eval(satisfaction.name) := get(satisfaction.name)/10]
unique.age.groups <- dat[, unique(get(age.group.name))]
unique.genders <- dat[, unique(get(gender.name))]
unique.income.groups <- dat[, unique(get(income.group.name))]
unique.regions <- dat[, unique(get(region.name))]
unique.personas <- dat[, unique(get(persona.name))]
unique.products <- dat[, unique(get(product.name))]
num.products <- length(unique.products)
respondent.variables <- c(age.group.name, gender.name, income.group.name, region.name, persona.name)
states.of.engagement <- c(awareness.name, consideration.name, consumption.name, satisfaction.name, advocacy.name)
bp.traits <- names(dat)[grep(pattern = pattern.bp, x = names(dat))]
percentage.table <- function(x, digits = 1){
tab <- table(x)
percentage.tab <- 100*tab/(sum(tab))
rounded.tab <- round(x = percentage.tab, digits = digits)
out <- paste(rounded.tab, "%", sep = "") %>% t() %>% as.data.frame()
colnames(out) <- names(rounded.tab)
return(out)
}
round.numerics <- function(x, digits){
if(is.numeric(x)){
x <- round(x = x, digits = digits)
}
return(x)
}
mean.diff <- function(x, y){
return(mean(x, na.rm=TRUE) - mean(y, na.rm=TRUE))
}
inputPanel(
selectInput(inputId = "respondent variables",
label = "Select variable:",
choices = respondent.variables,
selected = respondent.variables[1])
)
renderPlot({
tab <- percentage.table(x = dat[get(product.name) == get(product.name)[1], get(input$respondent_variable)])
barplot(height = tab, space= 0.01, las = 1, main = input$respondent_variable, ylab = "Percentage",
xlab = input$respondent_variable,ylim = c(0, 1.2*max(tab, na.rm = TRUE)),
col = "dodgerblue")
if(input$respondent_show_percentages == TRUE){
space_val = 0
text(x = -0.4 + 1:length(tab) *(1+space_val), y = tab, labels = sprintf("%.1f%%", tab), pos = 3)
}
})
dat
